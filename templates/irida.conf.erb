##### The filesystem location where files managed by irida are stored. The platform
##### will *NOT* automatically make this directory, so it must exist before you
##### start any instance of the platform.
sequence.file.base.directory=<%= @sequence_directory %>
reference.file.base.directory=<%= @reference_directory %>
output.file.base.directory=<%= @output_directory %>

##### Set the max upload size (in bytes). If left unconfigured, the max upload
##### size is unlimited (or limited by the container hosting IRIDA).
# file.upload.max_size=<%= @file_upload_max_size %>

##### Set number of threads for FASTQC and file post-processsing.  The max size
##### should not be more than the number of jdbc threads.
file.processing.core.size=<%= @file_processing_core %>
file.processing.max.size=<%= @file_processing_max %>
file.processing.queue.capacity=<%= @file_process_queue_capacity %>


##### The database-specific settings. Several examples of how to specify a
##### Hibernate driver are listed below (but commented out).


##// need database connection info


## MySQL (or MariaDB)
jdbc.driver=com.mysql.jdbc.Driver
hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

## Database location (you may need to use a different string for different
## database vendors).
jdbc.url=jdbc:mysql://<%= @db_host %>:3306/<%= @db_name %>

## Connection settings:
jdbc.username=<%= @db_user %>
jdbc.password=<%= @db_password %>

## Configuring Liquibase to execute a schema update. Should only make changes to
## the database when executing the first time, or when upgrading.
liquibase.update.database.schema=true

## Configure Hibernate to execute a schema construction. WARNING: do not use this
## at the same time as the Liquibase schema update. Liquibase will *not* execute
## if this value is set, warnings will be produced in the log. These settings should
## only be used in a development environment (**not** production).
hibernate.hbm2ddl.auto=
hibernate.hbm2ddl.import_files=

## Configure Hibernate to show SQL in the log file. You *probably* don't want
## to enable this, but could be useful for debugging.
hibernate.show_sql=false

## Connection Pool settings:
jdbc.pool.initialSize=10
jdbc.pool.maxActive=20
jdbc.pool.testOnBorrow=true
jdbc.pool.testOnReturn=true
jdbc.pool.testWhileIdle=true

## Configure the JDBC library to use this query to verify that a managed
## connection is still valid. This may need to change, depending on your database vendor.
jdbc.pool.validationQuery=select 1

jdbc.pool.maxWait=10000
jdbc.pool.removeAbandoned=true
jdbc.pool.logAbandoned=true
jdbc.pool.removeAbandonedTimeout=60
jdbc.pool.maxIdle=10

## Configure the password expiry time in days.  A value of -1 will set no expiry.
security.password.expiry=<%= @security_password_expiry %>


###############################################################################
# Execution Manager configuration Galaxy. This is how IRIDA should connect to #
# the internally managed instance of Galaxy for executing workflows.          #
###############################################################################

# The URL for the Galaxy execution manager
galaxy.execution.url=<%= @galaxy_execution_url %>

#//need to change to proper url

# The library key of an account to run workflows in Galaxy.
# This does not have to be an administrator account.
galaxy.execution.apiKey=<%= @galaxy_execution_apikey %>

#// need to change to proper api key

# The email address of an account to run workflows in Galaxy
galaxy.execution.email=<%= @galaxy_execution_email %>

#// need to change to a email for galaxy to use

# The data storage method for uploading data into a Galaxy execution manager.
galaxy.execution.dataStorage=<%= @galaxy_execution_datastorage %>

##################################
# Workflow configuration options #
##################################

# The timeout (in seconds) for uploading files to Galaxy for execution
# Increase this value if uploading files to Galaxy is timing out.
galaxy.library.upload.timeout=<%= @galaxy_library_upload_timeout %>

# The polling time (in seconds) for checking if files have been uploaded to Galaxy
# This value should not be greater than $galaxy.library.upload.timeout
galaxy.library.upload.polling.time=<%= @galaxy_library_upload_polling_time %>

# Number of threads used to wait for completion of uploading files.
galaxy.library.upload.threads=<%= @galaxy_library_upload_threads %>

# Maximum number of workflows IRIDA will schedule to run at the same time
irida.workflow.max-running=<%= @irida_workflow_max_running %>

##################################
# Analysis configuration options #
##################################

# The number days before intermediate files for an analysis get cleaned up.
# That is, the number of days before files in Galaxy get deleted for the analysis.
# Leave commented out for no cleanup.
# This value can be fractional representing a fraction of a day (e.g. 0.5 for half a day).
irida.analysis.cleanup.days=<%= @irida_analysis_cleanup_days %>

#################################
# Scheduled Task  configuration #
#################################
#Cron string for how often the email subscriptions are sent out.
#Format: sec min hrs dom mon dow
irida.scheduled.subscription.cron=<%= @irida_scheduled_subscription_cron %>
irida.scheduled.threads=<%= @irida_scheduled_threads %>

#################################
# NCBI SRA Export configuration #
#################################
#Host to upload ncbi exports


ncbi.upload.host=localhost
#FTP Username and password for bulk SRA uploads
ncbi.upload.user=<%= @ncbi_upload_user %>
ncbi.upload.password=<%= @ncbi_upload_password %>
#base directory in which to create SRA submissions
ncbi.upload.baseDirectory=<%= @ncbi_upload_basedirectory %>
#port for ftp upload
ncbi.upload.port=<%= @ncbi_upload_port %>
#Default namespace to preface file identifiers
ncbi.upload.namespace=<%= @ncbi_upload_namespace %>

# Adjusts Control Keep Alive Timeout value, which can assist in keeping an FTP connection alive for long file transfers.
# See <https://commons.apache.org/proper/commons-ndocs/org/apache/commons/net/ftp/FTPClient.html>.
ncbi.upload.controlKeepAliveTimeoutSeconds=<%= @ncbi_upload_controlkeepalivetimeoutseconds %>
ncbi.upload.controlKeepAliveReplyTimeoutMilliseconds=<%= @ncbi_upload_controlkeepalivereplytimeoutmilliseconds %>
# Adjusts whether or not to use active vs passive mode for the FTP connection.
# Passive mode is recommended if you are behind a firewall/NAT.
ncbi.upload.ftp.passive=<%= @ncbi_upload_ftp_passive %>

# A list of workflow types to disable from display in the web interface
# For example `irida.workflow.types.disabled=ASSEMBLY_ANNOTATION,ASSEMBLY_ANNOTATION_COLLECTION,BIO_HANSEL,MLST_MENTALIST,REFSEQ_MASHER,SISTR_TYPING,PHYLOGENOMICS`
irida.workflow.types.disabled=<%= @irida_disabled_workflow %>